Lexeme: void, Token: KEYWORD, Atributo: VOID, Linha: 3
Lexeme: quickSort, Token: ID, Atributo: IDENTIFIER, Linha: 3
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 3
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 3
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 3
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 3
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 3
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 3
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 3
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 3
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 3
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 3
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 3
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 3
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 4
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: q, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 5
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 6
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 6
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 6
Lexeme: <, Token: RELOP, Atributo: LT, Linha: 6
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 6
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 6
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 7
Lexeme: q, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 8
Lexeme: particao, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 8
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 8
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 8
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 8
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 8
Lexeme: quickSort, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 9
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 9
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 9
Lexeme: q, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 9
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 9
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: quickSort, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 10
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 10
Lexeme: q, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 10
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 10
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 10
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 10
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 10
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 11
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 12
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 14
Lexeme: particao, Token: ID, Atributo: IDENTIFIER, Linha: 14
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 14
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 14
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 14
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 14
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 14
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 14
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 14
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 14
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 14
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 14
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 14
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 14
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 15
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 16
Lexeme: x, Token: ID, Atributo: IDENTIFIER, Linha: 16
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 16
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 16
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 16
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 16
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 16
Lexeme: temp, Token: ID, Atributo: IDENTIFIER, Linha: 16
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 16
Lexeme: x, Token: ID, Atributo: IDENTIFIER, Linha: 18
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 18
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 18
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 18
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 18
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 18
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 18
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 19
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 19
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 19
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 19
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 19
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 19
Lexeme: for, Token: ID, Atributo: IDENTIFIER, Linha: 21
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 21
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 21
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 21
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 21
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 21
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 21
Lexeme: <=, Token: RELOP, Atributo: LE, Linha: 21
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 21
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 21
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 21
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 21
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 21
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 21
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 21
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 21
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 22
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 22
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 22
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 22
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 22
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 22
Lexeme: >=, Token: RELOP, Atributo: GE, Linha: 22
Lexeme: x, Token: ID, Atributo: IDENTIFIER, Linha: 22
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 22
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 23
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 24
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 24
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 24
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 24
Lexeme: temp, Token: ID, Atributo: IDENTIFIER, Linha: 26
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 26
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 26
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 26
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 26
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 26
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 26
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 27
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 27
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 27
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 27
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 27
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 27
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 27
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 27
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 27
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 27
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 28
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 28
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 28
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 28
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 28
Lexeme: temp, Token: ID, Atributo: IDENTIFIER, Linha: 28
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 28
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 29
Lexeme: temp, Token: ID, Atributo: IDENTIFIER, Linha: 32
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 32
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 32
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 32
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 32
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 32
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 32
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 32
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 32
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 33
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 33
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 33
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 33
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 33
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 33
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 33
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 33
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 33
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 33
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 33
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 33
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 34
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 34
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 34
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 34
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 34
Lexeme: temp, Token: ID, Atributo: IDENTIFIER, Linha: 34
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 34
Lexeme: imprimeVetorPar, Token: ID, Atributo: IDENTIFIER, Linha: 35
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 35
Lexeme: A, Token: ID, Atributo: IDENTIFIER, Linha: 35
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 35
Lexeme: p, Token: ID, Atributo: IDENTIFIER, Linha: 35
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 35
Lexeme: r, Token: ID, Atributo: IDENTIFIER, Linha: 35
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 35
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 35
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 36
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 36
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 36
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 36
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 36
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 36
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 36
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 37
