Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: buscaBinariar, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 1
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: valor, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 1
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 1
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 1
Lexeme: vetor, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 1
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: esq, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 1
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: dir, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 1
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 2
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 4
Lexeme: meio, Token: ID, Atributo: IDENTIFIER, Linha: 4
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 4
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 4
Lexeme: esq, Token: ID, Atributo: IDENTIFIER, Linha: 4
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 4
Lexeme: dir, Token: ID, Atributo: IDENTIFIER, Linha: 4
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 4
Lexeme: /, Token: ARITHOP, Atributo: DIV, Linha: 4
Lexeme: 2, Token: NUMBER, Atributo: CONST, Linha: 4
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 4
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 6
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 6
Lexeme: esq, Token: ID, Atributo: IDENTIFIER, Linha: 6
Lexeme: <=, Token: RELOP, Atributo: LE, Linha: 6
Lexeme: dir, Token: ID, Atributo: IDENTIFIER, Linha: 6
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 6
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 7
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 8
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 8
Lexeme: valor, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: >, Token: RELOP, Atributo: GT, Linha: 8
Lexeme: vetor, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 8
Lexeme: meio, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 8
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 8
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 9
Lexeme: esq, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 9
Lexeme: meio, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 9
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 9
Lexeme: buscaBinariar, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 9
Lexeme: valor, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 9
Lexeme: vetor, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 9
Lexeme: esq, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 9
Lexeme: dir, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 9
Lexeme: else, Token: KEYWORD, Atributo: ELSE, Linha: 10
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 10
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 10
Lexeme: valor, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: <, Token: RELOP, Atributo: LT, Linha: 10
Lexeme: vetor, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 10
Lexeme: meio, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 10
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 10
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 11
Lexeme: dir, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 11
Lexeme: meio, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 11
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 11
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 11
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 11
Lexeme: buscaBinariar, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 11
Lexeme: valor, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 11
Lexeme: vetor, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 11
Lexeme: esq, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 11
Lexeme: dir, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 11
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 11
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 11
Lexeme: else, Token: KEYWORD, Atributo: ELSE, Linha: 12
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 13
Lexeme: meio, Token: ID, Atributo: IDENTIFIER, Linha: 13
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 13
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 14
Lexeme: else, Token: KEYWORD, Atributo: ELSE, Linha: 15
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 16
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 16
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 16
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 16
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 17
