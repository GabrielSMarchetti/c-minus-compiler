Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: inserir, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 5
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: k, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 5
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: x, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 5
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 5
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 5
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 5
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 5
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 6
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 7
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 7
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 7
Lexeme: for, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 8
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 8
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 8
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: >, Token: RELOP, Atributo: GT, Linha: 8
Lexeme: k, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 8
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 8
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 8
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 8
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 8
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 8
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 8
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 8
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: -, Token: ARITHOP, Atributo: MINUS, Linha: 8
Lexeme: 1, Token: NUMBER, Atributo: CONST, Linha: 8
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 8
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 8
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 9
Lexeme: k, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 9
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 9
Lexeme: x, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 10
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 10
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 11
