Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: tirazeros, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 1
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 1
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 1
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 1
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 1
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 1
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 1
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 2
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 3
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 3
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 3
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 3
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 3
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 4
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 4
Lexeme: 0, Token: NUMBER, Atributo: CONST, Linha: 4
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 4
Lexeme: for, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 5
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 5
Lexeme: 0, Token: NUMBER, Atributo: CONST, Linha: 5
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 5
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 5
Erro: caractere inv√°lido '&' na linha 5
Lexeme: <, Token: RELOP, Atributo: LT, Linha: 5
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 5
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 5
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 5
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 5
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 6
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 6
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 6
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 6
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 6
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 6
Lexeme: !=, Token: RELOP, Atributo: NEQ, Linha: 6
Lexeme: 0, Token: NUMBER, Atributo: CONST, Linha: 6
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 6
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 7
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 8
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 8
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 8
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 8
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 8
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 8
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 9
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 10
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 11
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 11
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 11
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 12
