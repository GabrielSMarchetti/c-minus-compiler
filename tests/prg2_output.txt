Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: tirazeros, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 5
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 5
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 5
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 5
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 5
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 5
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 5
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 6
Lexeme: int, Token: KEYWORD, Atributo: INT, Linha: 7
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 7
Lexeme: ,, Token: COMMA, Atributo: ,, Linha: 7
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 7
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 7
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 8
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 8
Lexeme: 0, Token: NUMBER, Atributo: CONST, Linha: 8
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 8
Lexeme: for, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 9
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 9
Lexeme: 0, Token: NUMBER, Atributo: CONST, Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: <, Token: RELOP, Atributo: LT, Linha: 9
Lexeme: n, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 9
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 9
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 9
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 9
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 9
Lexeme: if, Token: KEYWORD, Atributo: IF, Linha: 10
Lexeme: (, Token: LPAREN, Atributo: (, Linha: 10
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 10
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 10
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 10
Lexeme: !=, Token: RELOP, Atributo: NEQ, Linha: 10
Lexeme: 0, Token: NUMBER, Atributo: CONST, Linha: 10
Lexeme: ), Token: RPAREN, Atributo: ), Linha: 10
Lexeme: {, Token: LBRACE, Atributo: {, Linha: 11
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 12
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 12
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 12
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 12
Lexeme: =, Token: ASSIGN, Atributo: =, Linha: 12
Lexeme: v, Token: ID, Atributo: IDENTIFIER, Linha: 12
Lexeme: [, Token: LSBRACK, Atributo: [, Linha: 12
Lexeme: j, Token: ID, Atributo: IDENTIFIER, Linha: 12
Lexeme: ], Token: RSBRACK, Atributo: ], Linha: 12
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 12
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 13
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 13
Lexeme: +, Token: ARITHOP, Atributo: PLUS, Linha: 13
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 13
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 14
Lexeme: return, Token: KEYWORD, Atributo: RETURN, Linha: 15
Lexeme: i, Token: ID, Atributo: IDENTIFIER, Linha: 15
Lexeme: ;, Token: SEMI, Atributo: ;, Linha: 15
Lexeme: }, Token: RBRACE, Atributo: }, Linha: 16
